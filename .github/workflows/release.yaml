name: "Release"

on:
  push:
    tags: 
        ['\*']

  workflow_dispatch:

permissions:
  contents: read 
      
jobs: 
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: true
      DOTNET_GENERATE_ASPNET_CERTIFICATE: false
      DOTNET_ADD_GLOBAL_TOOLS_TO_PATH: false
      DOTNET_MULTILEVEL_LOOKUP: 0
      DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: true
      TERM: xterm

    steps:
    - uses: actions/checkout@v4
      
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.200

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'microsoft'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        accept-android-sdk-licenses: true
         
    # if not using any workloads (e.g, Aspire, Wasm, Maui), remove this step
    - name: Restore workloads
      run: |
          cd ${{ github.workspace }}/src/CieloLio.NET/
          dotnet workload restore
   
    - name: Download Cielo Android SDK
      run: |
         sudo apt-get update
         sudo apt-get install -y curl unzip  
         curl https://desenvolvedores.cielo.com.br/api-portal/sites/default/files/ctools/SDK-2.0.1.zip -o cielo.zip
         unzip cielo.zip
         mkdir -p ${{ github.workspace }}/src/CieloLio.NET/Jars
         mv ./SDK-2.0.1/com/cielo/lio/order-manager/2.0.1/order-manager-2.0.1.aar ${{ github.workspace }}/src/CieloLio.NET/Jars/order-manager.aar
          
    - name: Restore
      run: |
        cd ${{ github.workspace }}/src/CieloLio.NET/
        dotnet restore

    - name: Build and Pack
      run: |
        cd ${{ github.workspace }}/src/CieloLio.NET/
        dotnet build -f:net8.0-android --configuration Release
        dotnet pack  
        dotnet nuget push ${{ github.workspace }}/*nupkg --source https://api.nuget.org/v3/index.json --api-key ${API_KEY} --skip-duplicate
        cd ${{ github.workspace }}
        ARTIFACT_PATHNAME=$(ls *.nupkg | head -n 1)
        ARTIFACT_NAME=$(basename $ARTIFACT_PATHNAME)
        echo "ARTIFACT_NAME=${ARTIFACT_NAME}" >> $GITHUB_ENV
        echo "ARTIFACT_PATHNAME=${ARTIFACT_PATHNAME}" >> $GITHUB_ENV
      
      env:
        API_KEY: ${{ secrets.API_KEY }}


    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ github.ref }}
        tag_name: ${{ github.ref }}
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     
    
    - name: upload .nupkg 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.ARTIFACT_PATH }}
        asset_name: ${{ env.ARTIFACT_NAME }}
        asset_content_type: application/zip
